#pragma once
#include <cstdint>
#include "Global.h"


class Bullet {
public:
    struct BulletManAob {
        uint32_t spawnHandleId = 0x16600000;
        uint8_t offset0x4[8] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
        uint32_t ItemId = 4010;
        uint8_t offset0x10[4] = {0x00, 0x00, 0x00, 0x00};
        uint32_t bullet_id = 10305000;
        uint8_t offset0x18[4] = { 0xFF, 0xFF, 0xFF, 0xFF };
        uint32_t dummyPolyID = 10100;
        uint8_t offset0x20[16] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };
        uint8_t offset0x30[16] = { 0x0A, 0x9C, 0x98, 0x3F, 0x00, 0x00, 0x80, 0x3F, 0x6B, 0x79, 0x83, 0x3F, 0x00, 0x00, 0x80, 0x3F };
        uint8_t offset0x40[4] = { 0x00, 0x00, 0x00, 0x00 };
        uint8_t offset0x44[4] = { 0x09, 0x00, 0x00, 0x00 };
        uint8_t offset0x48[4] = { 0x01, 0x00, 0x00, 0x00 };
        uint8_t offset0x4C[4] = { 0x00, 0x00, 0x00, 0x00 };
        uint8_t offset0x50[46] = { 0xF2, 0x34, 0x76, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x73, 0xAB, 0x62, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x54, 0x12, 0x3D, 0xFF, 0x54, 0x79, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 , 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
        float x = 0.0f;
        float y = 0.0f;
        float z = 0.0f;
        uint8_t padding[0x574];
    };
    static BulletManAob bulletManAob;
    static uint8_t BulletManOutput[0x300];
    static int BulletHandle;
    typedef void BulletSpawnFunction(void* bulletMan, void* bulletHandle, BulletManAob* bulletManAob, void* bulletManOutput);
    static void CreateProjectile(uint32_t bullet_id, Vector3 pos);
};

inline void Bullet::CreateProjectile(uint32_t bulletId, Vector3 pos) {
    uint8_t* bulletManPtr = AccessDeepPtr<uint8_t>(Global::BULLET_MAN.ptr(), 0);

    if (bulletManPtr == nullptr || Global::BULLET_SPAWN_FUNCTION.ptr() == nullptr) return;

    bulletManAob.bullet_id = bulletId;
    bulletManAob.x = pos.x;
    bulletManAob.y = pos.y;
    bulletManAob.z = pos.z;

    BulletSpawnFunction* BulletSpawnF = (BulletSpawnFunction*)(Global::BULLET_SPAWN_FUNCTION.ptr());
    BulletSpawnF((void*)bulletManPtr, &BulletHandle, &bulletManAob, &BulletManOutput);
}
